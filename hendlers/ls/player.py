import os
from aiogram import Router, types, Bot
from aiogram.types import Message, CallbackQuery, InputMediaPhoto, UserProfilePhotos
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext 
from keyboards import main_keyboard, info_keyboard, start_keyboard, profile_keyboard, play_keyboard, tour_keyboard, leadboards_keyboard,info_cuefa_keyboard, history_of_matches_keyboard, extended_static_keyboard, leadboards_season_back_keyboards, leadboards_season_3_back_keyboards, history_of_matches_back_keyboard, shop_keyboard
from db import get_db_connection
from datetime import datetime
from db_moves.add_db import add_user, make_buy, update_days_for_user, init_player_statistics, add_shop, update_user_coins
from db_moves.get_db import check_chop_el, display_main_leaderboard, display_main_statistics, display_penalty_cuefa_leaderboard, display_total_days, get_player_shop, get_user_coins
import time
from dotenv import load_dotenv
import asyncio
from math import *

TOKEN = os.getenv("BOT_TOKEN")
bot = Bot(token=TOKEN)
player_router = Router()

# —Å—é–¥–∞ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Ñ–æ—Ç–æ–∫ –Ω–µ–º–Ω–æ–≥–æ –ø–æ —Ç–µ–º–µ –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ –ø—Ä—è–º —Å –∏–Ω–µ—Ç–∞ —Å–ø–∏–∑–¥–∏ 
cached_photo_path = types.FSInputFile(os.path.join("img", "heart.webp"))
cached_photo_path2 = types.FSInputFile(os.path.join("img", "i.webp"))
cached_photo_path3 = types.FSInputFile(os.path.join("img", "–ö–ú–ù.jpg"))
cached_photo_path4 = types.FSInputFile(os.path.join("img", "6195669.jpg"))
cached_photo_path5 = types.FSInputFile(os.path.join("img", "5711954.jpg"))
cached_photo_path6 = types.FSInputFile(os.path.join("img", "61867.jpg"))
cached_photo_path7 = types.FSInputFile(os.path.join("img", "11698.jpg"))
cached_photo_path8 = types.FSInputFile(os.path.join("img", "all_games.jpg"))
cached_photo_path9 = types.FSInputFile(os.path.join("img", "tours1.jpg"))
cached_photo_path10 = types.FSInputFile(os.path.join("img", "table_leaders.jpg"))
cached_photo_path11 = types.FSInputFile(os.path.join("img", "menu_back.jpg"))
cached_photo_path12 = types.FSInputFile(os.path.join("img", "matches.jpg")) 
cached_photo_path13 = types.FSInputFile(os.path.join("img", "tours3.jpg"))
cached_photo_path14 = types.FSInputFile(os.path.join("img", "statistic.jpg"))
cached_photo_path15 = types.FSInputFile(os.path.join("img", "main_chest.jpg"))
cached_photo_path16 = types.FSInputFile(os.path.join("img", "statistic2.jpg"))
cached_photo_path17 = types.FSInputFile(os.path.join("img", "bj.jpg"))
cached_photo_path18 = types.FSInputFile(os.path.join("img", "shop.jpg"))
man = types.FSInputFile(os.path.join("img", "men.png"))



# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ–Ω–æ–≤–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def add_user_in_background(user_id: int, username: str, join_date: datetime):
    await add_user(user_id, username, join_date)


@player_router.message(Command("start"))
async def start(message: Message):
    start_time = time.time()
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–∑–≤–∞–Ω–∞ –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ
    if message.chat.type != "private":
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—ã –≤ –≥—Ä—É–ø–ø–µ
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —Å –±–æ—Ç–æ–º.üîí", reply=False)
        return

    user_id = message.from_user.id
    username = message.from_user.username
    join_date = datetime.now()
    asyncio.create_task(add_user_in_background(user_id, username, join_date))

    
    await init_player_statistics(user_id)
    await add_shop(user_id)

    await message.answer_photo(
        photo=cached_photo_path4,
        caption=(
            f'<b>–ü—Ä–∏–≤–µ—Ç {username}</b>!\n'
            '<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ (–ù–∞–∑–≤–∞–Ω–∏–µ –±–æ—Ç–∞)</b> üëã\n\n'
            '–ó–¥–µ—Å—å —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–≥—Ä—É–∑–∏—Ç—å—Å—è –≤ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∏–≥—Ä—ã, —Ç–∞–∫–∏–µ –∫–∞–∫ "–¶—É–µ—Ñ–∞ ü™®‚úÇÔ∏èüßª", "–ü–µ–Ω–∞–ª—å—Ç–∏ ‚öΩ", —Å–æ—Ä–µ–≤–Ω–æ–≤–∞—Ç—å—Å—è —Å –¥—Ä—É–≥–∏–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏ –∏ –¥—Ä—É–∑—å—è–º–∏ –∏ –ø–æ–≤—ã—à–∞—Ç—å —Å–≤–æ–µ –º–µ—Å—Ç–æ –≤ —Ç–∞–±–ª–∏—Ü–µ –ª–∏–¥–µ—Ä–æ–≤.\n\n'
            'üèÜ –¢–∞–∫–∂–µ –≤–∏–∑–∏—Ç–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–æ–π –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ —è–≤–ª—è—é—Ç—Å—è —Ç—É—Ä–Ω–∏—Ä—ã, –≥–¥–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç –ø—Ä–∏—è—Ç–Ω—ã–π –¥–µ–Ω–µ–∂–Ω—ã–π –ø—Ä–∏–∑!\n\n'
            '–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã –∏ –¥—Ä—É–≥—É—é –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ <b>"–û –±–æ—Ç–µ üîé"</b>\n\n'
            '–¢–∞–∫–∂–µ <b>"–ü–µ—Ä–µ–π–¥–∏ –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ üîó"</b> —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è\n\n'
            '–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É –Ω–∞–∂–º–∏ <b>"–°—Ç–∞—Ä—Ç üöÄ"</b>\n\n'
        ),
        reply_markup=main_keyboard,
        parse_mode='HTML'
    )
    end_time = time.time()
    print(f"–í—Ä–µ–º—è —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã —Å—Ç–∞—Ä—Ç: {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥ ")

   


   
@player_router.callback_query(lambda c: c.data == "info_back")
async def bot_info_back(callback_query: CallbackQuery):
    username = callback_query.from_user.username

    await callback_query.message.edit_media(
        media=InputMediaPhoto(
            media=cached_photo_path4,
            caption=(
            f'<b>–ü—Ä–∏–≤–µ—Ç {username}</b>!\n'
            '<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ (–ù–∞–∑–≤–∞–Ω–∏–µ –±–æ—Ç–∞)</b> üëã\n\n'
            '–ó–¥–µ—Å—å —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–≥—Ä—É–∑–∏—Ç—å—è –≤ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∏–≥—Ä—ã, —Ç–∞–∫–∏–µ –∫–∞–∫ "–¶—É–µ—Ñ–∞ ü™®‚úÇÔ∏èüßª", "–ü–µ–Ω–∞–ª—å—Ç–∏ ‚öΩ", —Å–æ—Ä–µ–≤–Ω–æ–≤–∞—Ç—å—Å—è —Å –¥—Ä—É–≥–∏–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏ –∏ –¥—Ä—É–∑—å—è–º–∏ –∏ –ø–æ–≤—ã—à–∞—Ç—å —Å–≤–æ–µ –º–µ—Å—Ç–æ –≤ —Ç–∞–±–ª–∏—Ü–µ –ª–∏–¥–µ—Ä–æ–≤.\n\n'
            'üèÜ –¢–∞–∫–∂–µ –≤–∏–∑–∏—Ç–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–æ–π –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ —è–≤–ª—è—é—Ç—è —Ç—É—Ä–Ω–∏—Ä—ã, –≥–¥–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç –ø—Ä–∏—è—Ç–Ω—ã–π –¥–µ–Ω–µ–∂–Ω—ã–π –ø—Ä–∏–∑!\n\n'
            '–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã –∏ –¥—Ä—É–≥—É—é –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ <b>"–û –±–æ—Ç–µ üîé"</b>\n\n'
            '–¢–∞–∫–∂–µ <b>"–ü–µ—Ä–µ–π—Ç–∏ –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ üîó"</b> —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è\n\n'
            '–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É –Ω–∞–∂–º–∏ <b>"–°—Ç–∞—Ä—Ç üöÄ"</b>\n\n'
            ),
            parse_mode='HTML'
        ),
        reply_markup=main_keyboard
    )
    
@player_router.callback_query(lambda c: c.data == "start")
async def bot_start(callback_query: CallbackQuery):
    await callback_query.message.edit_media(
        media=InputMediaPhoto(
            media=cached_photo_path6,
            caption="\n\n<b>–ú–µ–Ω—é üìå</b>\n\n",
            parse_mode='HTML'
        ),
        reply_markup=start_keyboard
    )
   

@player_router.callback_query(lambda c: c.data == "profile_back")
async def bot_start(callback_query: CallbackQuery):

    await callback_query.message.edit_media(
        media=InputMediaPhoto(
            media=cached_photo_path6,
            caption="\n\n<b>–ú–µ–Ω—é üìå</b>\n\n",
            parse_mode='HTML'
        ),
        reply_markup=start_keyboard
    )
   
    

@player_router.callback_query(lambda c: c.data=="start_match")
async def select_game(callback_query: CallbackQuery):

    await callback_query.message.edit_media(
        media=InputMediaPhoto(
            media=cached_photo_path8,
            caption=f"\n\n–í—ã–±–µ—Ä–∏ –∏–≥—Ä—É\n\n"
        ),
        reply_markup=play_keyboard
    )

@player_router.callback_query(lambda c: c.data == 'start_match_back')
async def end_ls_game_state(callback_query : CallbackQuery, state: FSMContext):
    await callback_query.message.answer_photo(
    photo=cached_photo_path8,
    caption=f"–í—ã–±–µ—Ä–∏ –∏–≥—Ä—É",
    reply_markup=play_keyboard
    )
    await state.clear()
    print('–≤—ã—Ö–æ–¥ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è(–∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥)')

@player_router.callback_query(lambda c: c.data=="start_tournaments")
async def start_reg_on_tour(callback_query: CallbackQuery):
    start_time  = time.time()

    await callback_query.message.edit_media(
        media=InputMediaPhoto(
            media=cached_photo_path9,
            caption="–ü—Ä–µ–¥—ã–¥—É—â–∏–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª–∏:\n"
            " ‚ó¶ –ò–≥—Ä–æ–∫ 1\n"
            " ‚ó¶ –ò–≥—Ä–æ–∫ 2\n"
            " ‚ó¶ –ò–≥—Ä–æ–∫ 3\n\n"
            "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—É—Ä–Ω–∏—Ä–µ:\n"
            " ‚Ä¢ 1 –º–µ—Å—Ç–æ: 500‚ÇΩ\n"
            " ‚Ä¢ 2 –º–µ—Å—Ç–æ: 100‚ÇΩ\n"
            " ‚Ä¢ 3 –º–µ—Å—Ç–æ: 50‚ÇΩ\n\n"
            "–¢—É—Ä–Ω–∏—Ä –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –∫–∞–∂–¥–æ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤ –•–•:00\n"
            "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è –∑–∞ —á–∞—Å"
        ), 
        reply_markup=tour_keyboard
    )
    end_time = time.time()
    print(f"–í—Ä–µ–º—è —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏ —Ç—É—Ä–Ω–∏—Ä—ã: {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥ ")
    

