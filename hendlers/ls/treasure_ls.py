from aiogram.types import CallbackQuery, Message, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext 
from db_moves.get_db import check_player_design, check_user_el_in_game, check_user_role
from db_moves.add_db import use_el_in_game
from hendlers.ls.player import player_router, cached_photo_path8, cached_photo_path23
from aiogram.filters import Command
from db import get_db_connection
from aiogram import types 
import os 
from keyboards import attack_buttons_treasures_ls,  defense_buttons_treasures_ls, test_button, buy_button, game_ls_back_keyboard, play_keyboard
import asyncio

cached_photo_path5 = types.FSInputFile(os.path.join("img", "main_chest.jpg"))
cached_photo_path6 = types.FSInputFile(os.path.join("img", "tours2.jpg"))
cached_photo_path3 = types.FSInputFile(os.path.join("img", "chest1.jpg"))
cached_photo_path7 = types.FSInputFile(os.path.join("img", "chest2.jpg"))


# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–∞–π–º–µ—Ä–æ–≤
active_timers = {}

you_can = False
help_history = []
help_penalty_text = []
supershot_plus = 0
supersave_plus = 0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ —Ç–∞–π–º–µ—Ä–∞ –¥–ª—è –∏–≥—Ä–æ–∫–∞
async def reset_timer(player_id):
    if player_id in active_timers:
        active_timers[player_id].cancel()  
        del active_timers[player_id]  



async def start_turn_timer(game, callback_query, player_id, timeout=15):
    await reset_timer(player_id)

    async def countdown():
        for remaining in range(timeout, 0, -1):
            print(f"–û—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è –¥–ª—è –∏–≥—Ä–æ–∫–∞ {player_id}: {remaining} —Å–µ–∫—É–Ω–¥")
            await asyncio.sleep(1)

        # –ù–∞–π—Ç–∏ –∏–≥—Ä—É –ø–æ ID –∏–≥—Ä–æ–∫–∞
        game = next(
            (g for g in ongoing_games.values() if player_id in (g["current_attacker"], g["current_defender"])),
            None
        )
        if game:
            if game["state"] == "waiting_for_attack" and game["current_attacker"] == player_id:
                print(f"–ò–≥—Ä–æ–∫ {player_id} –Ω–µ —É—Å–ø–µ–ª —Å–ø—Ä—è—Ç–∞—Ç—å –∑–æ–ª–æ—Ç–æüü°.")
                # game['history'][player_id]+='üß§'
                game['history'][game["current_defender"]]+='üí∞'
                game["scores"][game["current_defender"]] += 1
                # game['round']+=1
                await callback_query.bot.send_message(
                    chat_id=player_id, text="–í—ã –Ω–µ —É—Å–ø–µ–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∞—Ç–∞–∫—É! –•–æ–¥ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ —Å–æ–ø–µ—Ä–Ω–∏–∫—É."
                )
                # –ü–µ—Ä–µ–¥–∞–µ–º —Ö–æ–¥
                await end_round(game, callback_query)

            elif game["state"] == "waiting_for_defense" and game["current_defender"] == player_id:
                print(f"–ò–≥—Ä–æ–∫ {player_id} –Ω–µ —É—Å–ø–µ–ª –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞—â–∏—Ç—É.")
                await callback_query.bot.send_message(
                    chat_id=player_id, text="–í—ã –Ω–µ —É—Å–ø–µ–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞—â–∏—Ç—É! –ü—Ä–æ—Ç–∏–≤–Ω–∏–∫ –∑–∞–±–∏–≤–∞–µ—Ç –≥–æ–ª!"
                )
                # –≥–æ–ª –Ω–∞–ø—É –∑–∞ –æ–∂–∏–¥–∞–Ω–∏–µ
                game['history'][game["current_defender"]]+='üîí'
                # game["scores"][game["current_attacker"]] += 1
                await callback_query.bot.send_message(
                    chat_id=game["current_attacker"], text="–í—ã –∑–∞–±–∏–ª–∏ –≥–æ–ª!"
                )
                # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞—É–Ω–¥
                await end_round(game, callback_query)

            else:
                await callback_query.bot.send_message(
                    chat_id=player_id, text="–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
                )
        else:
            await callback_query.bot.send_message(
                chat_id=player_id, text="–ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞."
            )

    task = asyncio.create_task(countdown())
    active_timers[player_id] = task


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞—É–Ω–¥–∞ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É
async def end_round(game, callback_query):
    if game["round"] < 6 or (game["round"] < 10 and game["scores"][game["attacker"]] == game["scores"][game["defender"]]):
        # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ä–∞—É–Ω–¥—É
        game["round"] += 1

        # –ú–µ–Ω—è–µ–º —Ä–æ–ª–∏ –∏–≥—Ä–æ–∫–æ–≤
        game["current_attacker"], game["current_defender"] = game["current_defender"], game["current_attacker"]

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
        game["state"] = "waiting_for_attack"
        game.pop("attack_locked", None)
        game.pop("defense_locked", None)


        await callback_query.bot.delete_message(chat_id=game["attacker"], message_id=game["messages"][game["attacker"]])
        await callback_query.bot.delete_message(chat_id=game["defender"], message_id=game["messages"][game["defender"]])
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        next_attacker_id = game["current_attacker"]
        attack_message = await callback_query.bot.send_photo(
            chat_id=next_attacker_id,
            photo=cached_photo_path3,
            caption=f"–¢–µ–ø–µ—Ä—å –≤–∞—à–∞ –æ—á–µ—Ä–µ–¥—å –ø—Ä—è—Ç–∞—Ç—å\n\n"
            f"–°—á—ë—Ç:\n"
            f"<b>{game['usernames'][game['attacker']]}</b>: {game['scores'][game['attacker']]}\n"
            f"<b>{game['usernames'][game['defender']]}</b>: {game['scores'][game['defender']]}\n\n"
            f"–ò—Å—Ç–æ—Ä–∏—è —Ö–æ–¥–æ–≤\n"
            f"<b>{game['usernames'][game['attacker']]}</b>: {game['history'][game['attacker']]}\n"
            f"<b>{game['usernames'][game['defender']]}</b>: {game['history'][game['defender']]}\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –∫—É–¥–∞ —Å–ø—Ä—è—Ç–∞—Ç—å –∑–æ–ª–æ—Ç–æüü°",
            parse_mode = "HTML",
            reply_markup=attack_buttons_treasures_ls,
        )
        game["messages"][next_attacker_id] = attack_message.message_id

        # –£–≤–µ–¥–æ–º–ª—è–µ–º –∑–∞—â–∏—Ç–Ω–∏–∫–∞ –æ–∂–∏–¥–∞—Ç—å
        defender_wait_message = await callback_query.bot.send_photo(
            chat_id=game["current_defender"],
            photo=cached_photo_path7,
            caption="–û–∂–∏–¥–∞–π—Ç–µ, –ø–æ–∫–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫ –ø—Ä—è—á–µ—Ç –∑–æ–ª–æ—Ç–æüü°",
        )
        game["messages"][game["current_defender"]] = defender_wait_message.message_id

        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è –∞—Ç–∞–∫—É—é—â–µ–≥–æ
        await start_turn_timer(game, callback_query, next_attacker_id)
    elif (game["round"] >= 6 and game["scores"][game["attacker"]] != game["scores"][game["defender"]] and game['round']<10 and game['round']%2==0)  or (game["round"] == 10 and game["scores"][game["attacker"]] == game["scores"][game["defender"]]):
        print("01111111111111111111111111111111111111111111111111111111111111111111111")
        result_message = (
            f"–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n"
            
        )
        result_message += (
            f"üéâ –ü–æ–±–µ–¥–∏–ª <b>{game['usernames'][game['attacker']]}!</b>\n\n" if game["scores"][game['attacker']] > game["scores"][game['defender']]
            else f"üéâ –ü–æ–±–µ–¥–∏–ª <b>{game['usernames'][game['defender']]}!</b>\n" if game["scores"][game['attacker']] < game["scores"][game['defender']]
            else "ü§ù –ù–∏—á—å—è!\n"
        )
        result_message += (
            f"–°—á—ë—Ç:\n"
            f"<b>{game['usernames'][game['attacker']]}</b>: {game['scores'][game['attacker']]}\n"
            f"<b>{game['usernames'][game['defender']]}</b>: {game['scores'][game['defender']]}\n\n"
            f"–ò—Å—Ç–æ—Ä–∏—è —Ö–æ–¥–æ–≤\n"
            f"<b>{game['usernames'][game['attacker']]}</b>: {game['history'][game['attacker']]}\n"
            f"<b>{game['usernames'][game['defender']]}</b>: {game['history'][game['defender']]}\n"
        )
        for player_id in [game["attacker"], game["defender"]]:
            await callback_query.bot.send_photo(
                chat_id=player_id,
                photo = cached_photo_path6,
                caption=result_message,
                parse_mode='HTML'
            )

        # –£–¥–∞–ª—è–µ–º –∏–≥—Ä—É
        ongoing_games.pop(game["attacker"], None)

# –ö–ª–∞—Å—Å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
class Treasure(StatesGroup):
    waiting_for_message = State()
        

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "profile_treasures"
@player_router.callback_query(lambda c: c.data == "profile_treasures")
async def ls_treasures(callback_query: CallbackQuery, state: FSMContext):
    user_id = callback_query.from_user.id
    player_role = await check_player_design(user_id=user_id)
    # –ö–æ–≥–¥–∞ –≤—ã–±—Ä–∞–ª–∏ –∏–≥—Ä—É –≤—Ö–æ–¥–∏–º –≤ —Å–æ—Å–æ—Ç–æ—è–Ω–∏–µ
    await state.set_state(Treasure.waiting_for_message)
    print('–≤—Ö–æ–¥ –≤ —Å–æ—Å–æ—Ç–æ—è–Ω–∏–µ')
    # –ü—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å–ª–∏ –±–æ–µ—Ü –≤ –∏–≥—Ä–µ —Ç–æ –Ω–µ –¥–∞–µ–º –µ–º—É –≤—ã–∑–æ–≤–∞–º–∏ –∫–∏–¥–∞—Ç—å—Å—è
    # –í–û–¢ –≠–¢–û –ö–û–ú–ï–ù–¢–ò–¢–¨ –ò –°–ú–û–ñ–ï–®–¨ –ò–ì–†–ê–¢–¨
    if any(user_id in (game["attacker"], game["defender"]) for game in ongoing_games.values()):
        await callback_query.message.answer("–í—ã —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –∏–≥—Ä–µ! –ó–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ–∫—É—â—É—é –∏–≥—Ä—É, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é.")
        return
    await callback_query.message.answer(
        text = "–ù–∞–ø–∏—à–∏—Ç–µ —é–∑–µ—Ä–Ω–µ–π–º –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞:",
        reply_markup=game_ls_back_keyboard
        )
    
    

    # –µ—Å–ª–∏ –º—ã –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏, —Ç–æ —ç—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç(–Ω–∞—á–∏–Ω–∞–µ–º –∫–∞—Ç–∫—É –∏–ª–∏ –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —é–∑–µ—Ä–Ω–µ–π–º)
    # 
    @player_router.message(Treasure.waiting_for_message)
    async def check_username(message: Message, state: FSMContext):
        # if message.chat.type != 'private':
        #     return
        print(1345)
        opponent_username = message.text.strip("@")
        conn = await get_db_connection()
        try:
            # –ò—â–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –≤–≤–µ–¥—ë–Ω–Ω–æ–º—É username
            query = "SELECT user_id FROM users WHERE username = $1"
            opponent_id = await conn.fetchval(query, opponent_username)
            player_design = await check_player_design(opponent_id)

            if opponent_id:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å–ª–∏ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫ —É–∂–µ –≤ –∏–≥—Ä–µ, –Ω–µ —Ä–∞–∑—Ä–µ—à–∞–µ–º –Ω–∞—á–∞—Ç—å —Å –Ω–∏–º –∏–≥—Ä—É
                # –¢–û–ñ–ï –ù–ê –ö–û–ú–ï–ù–¢ 
                if any(opponent_id in (game["attacker"], game["defender"]) for game in ongoing_games.values()):
                    await message.answer(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{opponent_username} —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç –≤ –∏–≥—Ä–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
                    return

                # –ö–Ω–æ–ø–∫–∞ "–ü—Ä–∏–Ω—è—Ç—å –≤—ã–∑–æ–≤"
                treasures_accept_keyboard_ls = InlineKeyboardMarkup(inline_keyboard=[
                    [
                        InlineKeyboardButton(
                            text="|–ü—Ä–∏–Ω—è—Ç—å –≤—ã–∑–æ–≤|",
                            callback_data=f"accept_treasures_ls:{user_id}"
                        )
                    ]
                ])

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—ã–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é 
                await message.bot.send_photo(
                    chat_id=opponent_id,
                    photo=cached_photo_path5 if not player_design else cached_photo_path23,
                    caption=f"<b>–ò–≥—Ä–æ–∫ @{callback_query.from_user.username}</b> –≤—ã–∑—ã–≤–∞–µ—Ç –≤–∞—Å –Ω–∞ –¥—É—ç–ª—å –≤ <i>–°–æ–∫—Ä–æ–≤–∏—â–∞ üí∞üóùÔ∏è!</i>\n\n"
                            "–ù–∞–∂–º–∏—Ç–µ <b>–ü—Ä–∏–Ω—è—Ç—å –≤—ã–∑–æ–≤</b>, —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è!",
                    parse_mode="HTML",
                    reply_markup=treasures_accept_keyboard_ls,
                )
                await message.answer(f"–í—ã–∑–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @{opponent_username}!")
            else:
                await message.answer("–¢–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ!")
        finally:
            await conn.close()
        
        # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        await state.clear()
        print('–≤—ã—Ö–æ–¥ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è(–¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ)')
ongoing_games = {}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ü—Ä–∏–Ω—è—Ç—å –≤—ã–∑–æ–≤"
@player_router.callback_query(lambda c: c.data.startswith("accept_treasures_ls"))
async def accept_treasures(callback_query: CallbackQuery):
    initiator_id = int(callback_query.data.split(":")[1])
    defender_id = callback_query.from_user.id

    # –ü—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å–ª–∏ –ª—é–±–æ–π –∏–∑ –∏–≥—Ä–æ–∫–æ–≤ —É–∂–µ –≤ –∏–≥—Ä–µ, –æ—Ç–º–µ–Ω—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∏–≥—Ä—ã
    # B –≠–¢–û –¢–û–ñ–ï –ö–û–ú–ï–ù–¢
    if any(initiator_id in (game["attacker"], game["defender"]) or defender_id in (game["attacker"], game["defender"]) for game in ongoing_games.values()):
        await callback_query.answer("–û–¥–∏–Ω –∏–∑ –∏–≥—Ä–æ–∫–æ–≤ —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç –≤ –∏–≥—Ä–µ! –ó–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ–∫—É—â—É—é –∏–≥—Ä—É, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é.")
        return
    global help_history
    help_history = []
    # –ü–æ–ª—É—á–∞–µ–º —é–∑–µ—Ä–Ω–µ–π–º—ã
    initiator_chat = await callback_query.bot.get_chat(initiator_id)
    initiator_username = initiator_chat.username or f"–ò–≥—Ä–æ–∫ {initiator_id}"

    defender_chat = callback_query.from_user
    defender_username = defender_chat.username or f"–ò–≥—Ä–æ–∫ {defender_id}"

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã
    ongoing_games[initiator_id] = {
        "attacker": initiator_id,
        "defender": defender_id,
        "round": 1,
        "scores": {initiator_id: 0, defender_id: 0},
        "state": "waiting_for_attack",
        "current_attacker": initiator_id,
        "current_defender": defender_id,
        "history": {initiator_id: '', defender_id: ''},
        "messages": {},  # –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID —Å–æ–æ–±—â–µ–Ω–∏–π
        "usernames": {initiator_id: initiator_username, defender_id: defender_username},  # –Æ–∑–µ—Ä–Ω–µ–π–º—ã –∏–≥—Ä–æ–∫–æ–≤
    }

    game = ongoing_games[initiator_id]
    print(game)
    # –ù–∞—á–∞–ª–æ –∏–≥—Ä—ã: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥–æ–º—É –∏–≥—Ä–æ–∫—É
    attack_message = await callback_query.bot.send_photo(
        chat_id=initiator_id,
        photo=cached_photo_path3,
        caption=f"–í—ã —Ö–æ–¥–∏—Ç–µ –ø–µ—Ä–≤—ã–º!\n –°—á—ë—Ç: \n<b>{game['usernames'][initiator_id]}</b> {game['scores'][initiator_id]} - {game['scores'][defender_id]} <b>{game['usernames'][defender_id]}</b>\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫—É–¥–∞ —Å–ø—Ä—è—Ç–∞—Ç—å –∑–æ–ª–æ—Ç–æüü°",
        parse_mode='HTML',
        reply_markup=attack_buttons_treasures_ls,
    )
    wait_message = await callback_query.bot.send_photo(
        chat_id=defender_id,
        photo=cached_photo_path7,
        parse_mode='HTML',
        caption=f"–°—á—ë—Ç: \n<b>{game['usernames'][game['attacker']]}</b> {game['scores'][game['attacker']]} - {game['scores'][game['defender']]} <b>{game['usernames'][game['defender']]}</b>\n"
        "–û–∂–∏–¥–∞–π—Ç–µ, –ø–æ–∫–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫ –ø—Ä—è—á–µ—Ç –∑–æ–ª–æ—Ç–æüü°",
    )

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏–π
    game["messages"][initiator_id] = attack_message.message_id
    game["messages"][defender_id] = wait_message.message_id

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è –∞—Ç–∞–∫—É—é—â–µ–≥–æ
    await start_turn_timer(game, callback_query, initiator_id)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞—Ç–∞–∫–∏
@player_router.callback_query(lambda c: c.data.startswith("treasuresA_"))
async def handle_attack(callback_query: CallbackQuery):
    user_id = callback_query.from_user.id
    game = next((g for g in ongoing_games.values() if g.get("current_attacker") == user_id), None)
    help_penalty_text.clear()
    
    if not game or game["state"] != "waiting_for_attack":
        print('okkkkkkkkkkkkkkkkkk')
        await callback_query.answer("–≠—Ç–æ –Ω–µ –≤–∞—à —Ö–æ–¥!")
        return

    # –°–±—Ä–æ—Å —Ç–∞–π–º–µ—Ä–∞ –ø–µ—Ä–µ–¥ –∞—Ç–∞–∫–æ–π
    await reset_timer(user_id)

    # –ó–∞—â–∏—Ç–∞ –æ—Ç –ï–ª–∏—Å–µ–µ–≤
    if "attack_locked" in game and game["attack_locked"]:
        await callback_query.answer("–í—ã —É–∂–µ –≤—ã–±—Ä–∞–ª–∏ –∫—É–¥–∞ —Å–ø—Ä—è—Ç–∞—Ç—å –∑–æ–ª–æ—Ç–æüü°!")
        return

    game["attack_locked"] = True
    attack_direction = callback_query.data.split("_")[1]
    game["attack"] = attack_direction
    game["state"] = "waiting_for_defense"

    global you_can
    you_can = True
    help_penalty_text.append(game["attack"])

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞—Ç–∞–∫—É—é—â–µ–≥–æ
    await callback_query.bot.edit_message_media(
        chat_id=user_id,
        message_id=game["messages"][user_id],
        media=types.InputMediaPhoto(
            media=cached_photo_path3,
            caption=f"–í—ã —Å–ø—Ä—è—Ç–∞–ª–∏ –∑–æ–ª–æ—Ç–æüü°. –û–∂–∏–¥–∞–π—Ç–µ, –ø–æ–∫–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫ —Å–¥–µ–ª–∞–µ—Ç —Ö–æ–¥",
        ),
    )

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞—â–∏—Ç–Ω–∏–∫–∞
    await callback_query.bot.edit_message_media(
        chat_id=game["current_defender"],
        message_id=game["messages"][game["current_defender"]],
        media=types.InputMediaPhoto(
            media=cached_photo_path7,
            caption=f"–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫ –ø—Ä—è—á–µ—Ç! \n–°—á—ë—Ç: \n<b>{game['usernames'][game['attacker']]}</b> {game['scores'][game['attacker']]} - {game['scores'][game['defender']]} <b>{game['usernames'][game['defender']]}</b>\n\n"
            f"–ò—Å—Ç–æ—Ä–∏—è —Ö–æ–¥–æ–≤\n"
            f"<b>{game['usernames'][game['attacker']]}</b>: {game['history'][game['attacker']]}\n"
            f"<b>{game['usernames'][game['defender']]}</b>: {game['history'][game['defender']]}\n"
            f"–£–≥–∞–¥–∞–π—Ç–µ –≥–¥–µ –ª–µ–∂–∏—Ç –∑–æ–ª–æ—Ç–æüü°",
            parse_mode='HTML',
        ),
        reply_markup=defense_buttons_treasures_ls,
    )

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è –∑–∞—â–∏—Ç–Ω–∏–∫–∞
    await start_turn_timer(game, callback_query, game["current_defender"])

@player_router.callback_query(lambda c: c.data.startswith("treasuresD_"))
async def handle_defense(callback_query: CallbackQuery):
    user_id = callback_query.from_user.id
    global supershot_plus
    global supersave_plus
    game = next((g for g in ongoing_games.values() if g.get("current_defender") == user_id), None)

    if not game or game["state"] != "waiting_for_defense":
        await callback_query.answer("–≠—Ç–æ –Ω–µ –≤–∞—à —Ö–æ–¥!")
        return

    # –°–±—Ä–æ—Å —Ç–∞–π–º–µ—Ä–∞ –ø–µ—Ä–µ–¥ –∑–∞—â–∏—Ç–æ–π
    await reset_timer(user_id)

    # –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –Ω–∞–∂–∞—Ç–∏–π
    if "defense_locked" in game and game["defense_locked"]:
        await callback_query.answer("–í—ã —É–∂–µ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞—â–∏—Ç—ã!")
        return

    game["defense_locked"] = True
    defense_direction = callback_query.data.split("_")[1]
    attack_direction = game["attack"]
    attacker_id = game["current_attacker"]
    defender_id = game["current_defender"]
    global you_can
    you_can = False
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É–¥–∞—Ä–∞
    if attack_direction == defense_direction:
        result = "–í—ã —É–≥–∞–¥–∞–ª–∏! –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! üí∞"
        game["scores"][defender_id] += 1+supershot_plus
        game['history'][defender_id]+='üí∞'
    else:
        result = "–í—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏! üîí"
        game['history'][defender_id]+='üîí'
        game["scores"][attacker_id] += supersave_plus

    # –£–≤–µ–¥–æ–º–ª—è–µ–º –∏–≥—Ä–æ–∫–æ–≤ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
    attacker_message = (
        f"{result}\n\n–°—á—ë—Ç: {game['usernames'][attacker_id]} {game['scores'][attacker_id]} - "
        f"{game['scores'][defender_id]} {game['usernames'][defender_id]}\n\n"
    )
    defender_message = (
        f"{result}\n\n–°—á—ë—Ç: {game['usernames'][attacker_id]} {game['scores'][attacker_id]} - "
        f"{game['scores'][defender_id]} {game['usernames'][defender_id]}"
    )

    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤
    await callback_query.bot.delete_message(chat_id=attacker_id, message_id=game["messages"][attacker_id])
    await callback_query.bot.delete_message(chat_id=defender_id, message_id=game["messages"][defender_id])

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–≥—Ä—ã
    if game["round"] < 6 or (game["round"] < 10 and game["scores"][game["attacker"]] == game["scores"][game["defender"]]):
        # –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ–ª–µ–π
        game["round"] += 1
        supershot_plus = 0
        supersave_plus = 0
        game["current_attacker"], game["current_defender"] = game["current_defender"], game["current_attacker"]
        game["state"] = "waiting_for_attack"
        game.pop("attack_locked", None)
        game.pop("defense_locked", None)

        # –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –∞—Ç–∞–∫—É—é—â–µ–≥–æ
        next_attacker_id = game["current_attacker"]
        attack_message = await callback_query.bot.send_photo(
            chat_id=next_attacker_id,
            photo=cached_photo_path3,
            caption=f"–¢–µ–ø–µ—Ä—å –≤–∞—à–∞ –æ—á–µ—Ä–µ–¥—å –ø—Ä—è—Ç–∞—Ç—å! \n\n–°—á—ë—Ç: \n<b>{game['usernames'][game['attacker']]}</b> {game['scores'][game['attacker']]} - {game['scores'][game['defender']]} <b>{game['usernames'][game['defender']]}</b>\n\n"
            f"–ò—Å—Ç–æ—Ä–∏—è —Ö–æ–¥–æ–≤\n"
            f"<b>{game['usernames'][game['attacker']]}</b>: {game['history'][game['attacker']]}\n"
            f"<b>{game['usernames'][game['defender']]}</b>: {game['history'][game['defender']]}\n\n"
            f"–í—ã–±–µ—Ä–∏—Ç–µ –∫—É–¥–∞ —Å–ø—Ä—è—Ç–∞—Ç—å –∑–æ–ª–æ—Ç–æüü°",
            parse_mode='HTML',
            reply_markup=attack_buttons_treasures_ls,
        )
        game["messages"][next_attacker_id] = attack_message.message_id

        # –£–≤–µ–¥–æ–º–ª—è–µ–º –∑–∞—â–∏—Ç–Ω–∏–∫–∞ –æ–∂–∏–¥–∞—Ç—å
        defender_wait_message = await callback_query.bot.send_photo(
            chat_id=game["current_defender"],
            photo=cached_photo_path7,
            caption="–û–∂–∏–¥–∞–π—Ç–µ, –ø–æ–∫–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫ —Å–ø—Ä—è—á–µ—Ç –∑–æ–ª–æ—Ç–æüü°\n",
        )
        game["messages"][game["current_defender"]] = defender_wait_message.message_id

        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è –∞—Ç–∞–∫—É—é—â–µ–≥–æ
        await start_turn_timer(game, callback_query, next_attacker_id)
    elif (game["round"] >= 6 and game["scores"][game["attacker"]] != game["scores"][game["defender"]] and game['round']<10 and game['round']%2==0)  or (game["round"] == 10 and game["scores"][game["attacker"]] == game["scores"][game["defender"]]):
        # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–≥—Ä—ã
        result_message = (
            f"–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n"
            
        )
        result_message += (
            f"üéâ –ü–æ–±–µ–¥–∏–ª <b>{game['usernames'][game['attacker']]}!</b>\n\n" if game["scores"][game['attacker']] > game["scores"][game['defender']]
            else f"üéâ –ü–æ–±–µ–¥–∏–ª <b>{game['usernames'][game['defender']]}!</b>\n" if game["scores"][game['attacker']] < game["scores"][game['defender']]
            else "ü§ù –ù–∏—á—å—è!\n"
        )
        result_message += (
            f"–°—á—ë—Ç:\n"
            f"<b>{game['usernames'][game['attacker']]}</b>: {game['scores'][game['attacker']]}\n"
            f"<b>{game['usernames'][game['defender']]}</b>: {game['scores'][game['defender']]}\n\n"
            f"–ò—Å—Ç–æ—Ä–∏—è —Ö–æ–¥–æ–≤\n"
            f"<b>{game['usernames'][game['attacker']]}</b>: {game['history'][game['attacker']]}\n"
            f"<b>{game['usernames'][game['defender']]}</b>: {game['history'][game['defender']]}\n"
        )
        for player_id in [game["attacker"], game["defender"]]:
            await callback_query.bot.send_photo(
                chat_id=player_id,
                photo = cached_photo_path6,
                caption=result_message,
                parse_mode='HTML'
            )
        # –£–¥–∞–ª—è–µ–º –∏–≥—Ä—É
        ongoing_games.pop(game["attacker"], None)


@player_router.callback_query(lambda c: c.data in ["help_in_treasure_ls","supershot_in_treasure_ls","supersave_in_treasure_ls"])
async def handle_defense_act(callback_query: types.CallbackQuery):
    global help_history
    user_id = callback_query.from_user.id
    user_el = await check_user_el_in_game(user_id=user_id)
    choice = callback_query.data
    if user_id not in help_history:
        if choice == "help_in_treasure_ls":
            if '–ü–æ–¥—Å–∫–∞–∑–∫–∞' in user_el:
                shoot_various = ['left', 'center', 'right']
                print(help_penalty_text[0] in shoot_various)
                for i in shoot_various:
                    if i != help_penalty_text[0]:
                        shoot_various.remove(i)
                        break
                # shoot_various.remove(help_penalty_text[0])
                print(choice == "help_in_game", len(shoot_various)!=3)
                if len(shoot_various)!=3:
                    await callback_query.answer(
                        text=f"–ò–≥—Ä–æ–∫ –ø—Ä–æ–±–∏–ª –≤ {shoot_various[0]} –∏–ª–∏ {shoot_various[1]}",
                        show_alert=True
                    )
                    await use_el_in_game(user_id = user_id, sale_name='–ü–æ–¥—Å–∫–∞–∑–∫–∞')
                help_history.append(user_id)
            elif '–ü–æ–¥—Å–∫–∞–∑–∫–∞' not in user_el:
                await callback_query.answer(
                        text=f"–£ –≤–∞—Å –Ω–µ—Ç —ç—Ç–æ–≥–æ –±–æ–Ω—É—Å–∞",
                        show_alert=True
                    )

        elif choice =="supershot_in_treasure_ls":
            if '–°—É–ø–µ—Ä—É–¥–∞—Ä' in user_el:
                global supershot_plus
                print('1=!!!+!+!')
                if supershot_plus ==0:
                    supershot_plus+=1
                else: 
                    supershot_plus = 1
                await callback_query.answer(
                            text=f"–°—É–ø–µ—Ä–Ω–∞—Ö–æ–¥–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞, –≤—ã–±–∏—Ä–∞–π—Ç–µ!",
                            show_alert=True
                        )
                await use_el_in_game(user_id = user_id, sale_name='–°—É–ø–µ—Ä—É–¥–∞—Ä')
                help_history.append(user_id)
            elif '–°—É–ø–µ—Ä—É–¥–∞—Ä' not in user_el:
                await callback_query.answer(
                        text=f"–£ –≤–∞—Å –Ω–µ—Ç —ç—Ç–æ–≥–æ –±–æ–Ω—É—Å–∞",
                        show_alert=True
                    )
        elif choice == "supersave_in_treasure_ls":
            if '–°—É–ø–µ—Ä—Å–µ–π–≤' in user_el:
                global supersave_plus
                print("23e232323")
                supersave_plus += 1
                await callback_query.answer(
                            text=f"–°—É–ø–µ—Ä–ø—Ä—è—Ç–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å—É–Ω–¥—É–∫!",
                            show_alert=True
                        )
                await use_el_in_game(user_id = user_id, sale_name='–°—É–ø–µ—Ä—Å–µ–π–≤')
                help_history.append(user_id)
            elif '–°—É–ø–µ—Ä—Å–µ–π–≤' not in user_el:
                await callback_query.answer(
                        text=f"–£ –≤–∞—Å –Ω–µ—Ç —ç—Ç–æ–≥–æ –±–æ–Ω—É—Å–∞",
                        show_alert=True
                    )
    else:
        await callback_query.answer(
                        text=f"–£—Å–∏–ª–µ–Ω–∏–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –∑–∞ –∏–≥—Ä—É",
                        show_alert=True
                    )
