from hendlers.ls.player  import player_router, cached_photo_path10, cached_photo_path5, cached_photo_path3
from aiogram.types import CallbackQuery, InputMediaPhoto, UserProfilePhotos
from db_moves.get_db import  display_penalty_cuefa_leaderboard, display_main_leaderboard
from keyboards import  leadboards_season_back_keyboards, leadboards_keyboard, leadboards_season_3_back_keyboards
from db import get_db_connection
import time


#–ó–î–ï–°–¨ –§–û–¢–û –ù–ï –ù–£–ñ–ù–û
@player_router.callback_query(lambda c: c.data=="leadboards_season")
async def start_reg_on_tour(callback_query: CallbackQuery):

    await callback_query.message.delete()
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
    new_message = await callback_query.message.answer(
        text="üèÜ –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª—É—á—à–∏—Ö –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ",
        parse_mode="HTML",
        reply_markup=leadboards_season_back_keyboards
    )


@player_router.callback_query(lambda c: c.data=="start_leadboards")
async def start_reg_on_tour(callback_query: CallbackQuery):

    await callback_query.message.edit_media(
        media=InputMediaPhoto(
            media=cached_photo_path10,
            caption="–ö–∞–∂–¥—ã–π –º–µ—Å—è—Ü —Ç–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è\n\n"
            "1 –º–µ—Å—Ç–æ –≤ –°–µ–∑–æ–Ω–Ω–æ–π –¢–õ: 500‚ÇΩ\n"
            "1 –º–µ—Å—Ç–æ –≤ –¢—É—Ä–Ω–∏—Ä–Ω–æ–π –¢–õ: 1000‚ÇΩ\n\n"
            "–î–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –±–æ—Ç–∞:89261233000, –±—É–¥–µ–º –æ—á–µ–Ω—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã –≤–∞—à–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–µ!"
        ), 
        reply_markup=leadboards_keyboard
    )
# –°–ï–ó–û–ù–ù–ê–Ø –¢–ê–ë–õ–ò–¶–ê –õ–ò–î–ï–†–û–í, –†–ê–ó–ë–ò–í–ê–ï–¢–°–Ø –ù–ê 1)–¶–£–ï–§–ê 2)–ü–ï–ù–ê–õ–¨–¢–ò 3)–û–ë–©–ê–Ø
@player_router.callback_query(lambda c: c.data=="leadboards_season_penalty")
async def start_reg_on_tour(callback_query: CallbackQuery):
    username = callback_query.from_user.username

    leade–∫_resp = await display_penalty_cuefa_leaderboard(game_id=2)
    leaderboard =  [[leader["username"], leader["match_points"]] for leader in leade–∫_resp]
    current_player = [leader for leader in leaderboard if leader[0] == username]
    current_player_place = leaderboard.index(*current_player)+1

    await callback_query.message.edit_media(
        media=InputMediaPhoto(
            media=cached_photo_path5,
            caption="<b>–°–ø–∏—Å–æ–∫ –ª–∏–¥–µ—Ä–æ–≤ : –ü–µ–Ω–∞–ª—å—Ç–∏‚öΩ</b>\n\n"
            f"ü•á @{leaderboard[0][0]} - {leaderboard[0][1]}\n"
            f"ü•à @{leaderboard[1][0]} - {leaderboard[1][1]}\n"
            f"ü•â @{leaderboard[2][0]} - {leaderboard[2][1]}\n"
            f" 4. @{leaderboard[3][0]} - {leaderboard[3][1]}\n"
            f" 5. @{leaderboard[4][0]} - {leaderboard[4][1]}\n"
            f" 6. @{leaderboard[5][0]} - {leaderboard[5][1]}\n"
            f" 7. @{leaderboard[6][0]} - {leaderboard[6][1]}\n"
            f" 8. @{leaderboard[7][0]} - {leaderboard[7][1]}\n"
            f" 9. @{leaderboard[8][0]} - {leaderboard[8][1]}\n"
            f" 10. @{leaderboard[9][0]} - {leaderboard[9][1]}\n\n"
            f" {current_player_place}. @{current_player[0][0]} - {current_player[0][1]}",
            parse_mode="HTML"
        ), 
        reply_markup=leadboards_season_3_back_keyboards
    )

@player_router.callback_query(lambda c: c.data=="leadboards_season_cuefa")
async def start_reg_on_tour(callback_query: CallbackQuery):
    username = callback_query.from_user.username

    leade–∫_resp = await display_penalty_cuefa_leaderboard(game_id=1)
    leaderboard =  [[leader["username"], leader["match_points"]] for leader in leade–∫_resp]
    current_player = [leader for leader in leaderboard if leader[0] == username]
    current_player_place = leaderboard.index(*current_player)+1

    await callback_query.message.edit_media(
        media=InputMediaPhoto(
            media=cached_photo_path3,
            caption="<b>–°–ø–∏—Å–æ–∫ –ª–∏–¥–µ—Ä–æ–≤ : –¶—É–µ—Ñ–∞ ü™®‚úÇÔ∏èüìÉ</b>\n\n"
            f"ü•á @{leaderboard[0][0]} - {leaderboard[0][1]}\n"
            f"ü•à @{leaderboard[1][0]} - {leaderboard[1][1]}\n"
            f"ü•â @{leaderboard[2][0]} - {leaderboard[2][1]}\n"
            f" 4. @{leaderboard[3][0]} - {leaderboard[3][1]}\n"
            f" 5. @{leaderboard[4][0]} - {leaderboard[4][1]}\n"
            f" 6. @{leaderboard[5][0]} - {leaderboard[5][1]}\n"
            f" 7. @{leaderboard[6][0]} - {leaderboard[6][1]}\n"
            f" 8. @{leaderboard[7][0]} - {leaderboard[7][1]}\n"
            f" 9. @{leaderboard[8][0]} - {leaderboard[8][1]}\n"
            f" 10. @{leaderboard[9][0]} - {leaderboard[9][1]}\n\n"
            f" {current_player_place}. @{current_player[0][0]} - {current_player[0][1]}",
            parse_mode="HTML"
        ), 
        reply_markup=leadboards_season_3_back_keyboards
    )

@player_router.callback_query(lambda c: c.data=="leadboards_season_stakanchiki")
async def start_reg_on_tour(callback_query: CallbackQuery):
    username = callback_query.from_user.username

    leade–∫_resp = await display_penalty_cuefa_leaderboard(game_id=4)
    leaderboard =  [[leader["username"], leader["match_points"]] for leader in leade–∫_resp]
    current_player = [leader for leader in leaderboard if leader[0] == username]
    current_player_place = leaderboard.index(*current_player)+1

    await callback_query.message.edit_media(
        media=InputMediaPhoto(
            media=cached_photo_path3,
            caption="<b>–°–ø–∏—Å–æ–∫ –ª–∏–¥–µ—Ä–æ–≤ : –°–æ–∫—Ä–æ–≤–∏—â–∞</b>\n\n"
            f"ü•á @{leaderboard[0][0]} - {leaderboard[0][1]}\n"
            f"ü•à @{leaderboard[1][0]} - {leaderboard[1][1]}\n"
            f"ü•â @{leaderboard[2][0]} - {leaderboard[2][1]}\n"
            f" 4. @{leaderboard[3][0]} - {leaderboard[3][1]}\n"
            f" 5. @{leaderboard[4][0]} - {leaderboard[4][1]}\n"
            f" 6. @{leaderboard[5][0]} - {leaderboard[5][1]}\n"
            f" 7. @{leaderboard[6][0]} - {leaderboard[6][1]}\n"
            f" 8. @{leaderboard[7][0]} - {leaderboard[7][1]}\n"
            f" 9. @{leaderboard[8][0]} - {leaderboard[8][1]}\n"
            f" 10. @{leaderboard[9][0]} - {leaderboard[9][1]}\n\n"
            f" {current_player_place}. @{current_player[0][0]} - {current_player[0][1]}",
            parse_mode="HTML"
        ), 
        reply_markup=leadboards_season_3_back_keyboards
    )

@player_router.callback_query(lambda c: c.data=="leadboards_season_21")
async def start_reg_on_tour(callback_query: CallbackQuery):
    username = callback_query.from_user.username

    leade–∫_resp = await display_penalty_cuefa_leaderboard(game_id=3)
    leaderboard =  [[leader["username"], leader["match_points"]] for leader in leade–∫_resp]
    current_player = [leader for leader in leaderboard if leader[0] == username]
    current_player_place = leaderboard.index(*current_player)+1

    await callback_query.message.edit_media(
        media=InputMediaPhoto(
            media=cached_photo_path3,
            caption="<b>–°–ø–∏—Å–æ–∫ –ª–∏–¥–µ—Ä–æ–≤ : 21‚ô†‚ô•</b>\n\n"
            f"ü•á @{leaderboard[0][0]} - {leaderboard[0][1]}\n"
            f"ü•à @{leaderboard[1][0]} - {leaderboard[1][1]}\n"
            f"ü•â @{leaderboard[2][0]} - {leaderboard[2][1]}\n"
            f" 4. @{leaderboard[3][0]} - {leaderboard[3][1]}\n"
            f" 5. @{leaderboard[4][0]} - {leaderboard[4][1]}\n"
            f" 6. @{leaderboard[5][0]} - {leaderboard[5][1]}\n"
            f" 7. @{leaderboard[6][0]} - {leaderboard[6][1]}\n"
            f" 8. @{leaderboard[7][0]} - {leaderboard[7][1]}\n"
            f" 9. @{leaderboard[8][0]} - {leaderboard[8][1]}\n"
            f" 10. @{leaderboard[9][0]} - {leaderboard[9][1]}\n\n"
            f" {current_player_place}. @{current_player[0][0]} - {current_player[0][1]}",
            parse_mode="HTML"
        ), 
        reply_markup=leadboards_season_3_back_keyboards
    )

@player_router.callback_query(lambda c: c.data=="leaderboards_season_main")
async def start_reg_on_tour(callback_query: CallbackQuery):
    username = callback_query.from_user.username

    stat_leader = await display_main_leaderboard()
    print([[leader["username"], leader["total_score"]] for leader in stat_leader])
    leaderboard = [[leader["username"], leader["total_score"]] for leader in stat_leader]
    current_player = [leader for leader in leaderboard if leader[0] == username]
    current_player_place = leaderboard.index(*current_player)+1
    print(current_player, current_player_place)
    await callback_query.message.edit_media(
        media=InputMediaPhoto(
            media=cached_photo_path10,
            caption="<b>–û–±—â–∞—è —Ç–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤</b>\n\n"
            f"ü•á @{leaderboard[0][0]} - {leaderboard[0][1]}\n"
            f"ü•à @{leaderboard[1][0]} - {leaderboard[1][1]}\n"
            f"ü•â @{leaderboard[2][0]} - {leaderboard[2][1]}\n"
            f" 4. @{leaderboard[3][0]} - {leaderboard[3][1]}\n"
            f" 5. @{leaderboard[4][0]} - {leaderboard[4][1]}\n"
            f" 6. @{leaderboard[5][0]} - {leaderboard[5][1]}\n"
            f" 7. @{leaderboard[6][0]} - {leaderboard[6][1]}\n"
            f" 8. @{leaderboard[7][0]} - {leaderboard[7][1]}\n"
            f" 9. @{leaderboard[8][0]} - {leaderboard[8][1]}\n"
            f" 10. @{leaderboard[9][0]} - {leaderboard[9][1]}\n\n"
            f" {current_player_place}. @{current_player[0][0]} - {current_player[0][1]}",
            parse_mode="HTML"
        ), 
        reply_markup=leadboards_season_3_back_keyboards
    )